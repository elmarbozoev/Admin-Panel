@model List<CalendarItem>

@{
    Dictionary<int, string> monthName = new Dictionary<int, string>()
            {
                {1, "January" },
                {2, "February" },
                {3, "March" },
                {4, "April" },
                {5, "May" },
                {6, "June" },
                {7, "July" },
                {8, "August" },
                {9, "September" },
                {10, "October" },
                {11, "November" },
                {12, "December" }
            };

    List<string> dayOfWeekNames = new List<string>(){
        "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"
    };

    int firtsDayOfWeek = dayOfWeekNames.FindIndex(x => x.Contains(Model.First().DayOfWeek));
    int lastDayOfWeek = dayOfWeekNames.FindIndex(x => x.Contains(Model.Last().DayOfWeek));

    int numberOfDays = DateTime.DaysInMonth(Model.First().Year, Model.First().Month);
}

<link href="@Url.Content("~/css/Calendar/Index.css")" rel="stylesheet" />

<script src="js/jquery-1.3.min.js" type="text/javascript"> </script>
<link rel="stylesheet" href="css/master.css" type="text/css" media="screen" charset="utf-8" />
<script src="./js/calscr.js"></script>
<script src="https://use.fontawesome.com/9b8c2c2724.js"></script>

<div class="calendar">
    <div class="month">
        <i class="fa-solid fa-chevron-right"></i>
        <div class="text">
            <strong>@monthName[Model.First().Month]</strong>
            <strong>@Model.First().Year</strong>
        </div>
        <i class="fa-solid fa-chevron-left"></i>
    </div>
    
    <table>
        <tr>
            <th>Mon</th>
            <th>Tue</th>
            <th>Wed</th>
            <th>Thu</th>
            <th>Fri</th>
            <th>Sat</th>
            <th>Sun</th>
        </tr>
         @for (int i = 0; i < numberOfDays; i++)
        {
            <tr>
                @for(int j = 0; j < 7; j++, i++)
                {
                    @if(j<firtsDayOfWeek && i==0) 
                    {
                        for (; j < firtsDayOfWeek; j++)
                        {
                            <td><pre>   </pre></td>
                        }
                    }
                    <td>
                        @{
                            var day = @Model.Find(x => x.Day == i + 1);
                            if (day == null) {
                                <div>@(i+1)</div>
                            }
                            else{
                                <div>
                                    @day.Events.First().Name
                                </div>
                            }
                        }
                    </td>
                    @if (i >= numberOfDays - 1) break;
                }
                @if (i >= numberOfDays - 1) break;
                @{--i;}
            </tr>
        }
    </table>
</div>
